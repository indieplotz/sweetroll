<%= templates.header(_.set(scope, 'meta.pageClass', 'h-entry')) %>
<% var data = scope.data %>
<% var entry = data.entry %>
<% var properties = entry.properties %>
<% var isUntitled = _.isEmpty(properties.name) %>
<% var syndicationName = function (x) {
	if (_.includes(x, 'twitter.com')) return 'Twitter'
	if (_.includes(x, 'facebook.com')) return 'Facebook'
	if (_.includes(x, 'instagram.com')) return 'Instagram'
	if (_.includes(x, 'app.net')) return 'App.net'
	var matches = x.match(/^https?\:\/\/([^\/?#]+)/)
	return (matches && matches[1]) || x
} %>
<main class="site-main ${ isUntitled ? 'note' : 'article' }-main">
	<article class="entry ${ isUntitled ? 'note' : 'article' }-entry">
		<header class="entry-header">

			posted on
			<time class="dt-published" datetime="${ _.head(properties.published) }">
				<% if (isUntitled) { %>
					<a href="${ data.permalink }" class="u-url u-uid note-permalink" rel="bookmark">
				<% } %>
				<%- moment.utc(_.head(properties.published)).format('dddd, MMMM Do YYYY, HH:mm') %>
				<% if (isUntitled) { %>
					</a>
				<% } %>
			</time>
			<% if (!_.isEmpty(properties['client-id'])) { %>
				using <a href="${ _.head(properties['client-id']) }" class="u-client-id">
					<%- _.trimEnd(_.head(properties['client-id']).replace('http://', '').replace('https://', ''), '/') %>
				</a>
			<% } %>
			<% if (!_.isEmpty(properties.updated) && (_.head(properties.updated) != _.head(properties.published))) { %>
				and updated on
				<time class="dt-updated" datetime="${ _.head(properties.updated) }">
					<%- moment.utc(_.head(properties.updated)).format('dddd, MMMM Do YYYY, HH:mm') %>
				</time>
			<% } %>

		</header>

		<%= templates.entryCiteReplies({ entry: entry, showRel: true, showContent: true }) %>

		<%= templates.entryCiteLikes({ entry: entry, showRel: true, addClass: 'entry-main' }) %>

		<% if (!isUntitled) { %>
			<div class="entry-main">
				<h1 class="p-name">
					<a href="${ data.permalink }" class="u-url u-uid" rel="bookmark" tabindex="-1">
						<%- properties.name %>
					</a>
				</h1>
			</div>
		<% } %>

		<% if (!_.isEmpty(properties.content) || !_.isEmpty(properties['repost-of'])) { %>
			<div class="e-content ${ isUntitled ? 'p-name' : '' }">
				<% if (!isUntitled) { %>
					<fragmention-target exact>
				<% } %>
				<%= templates.entryCiteReposts({ entry: entry, showRel: true }) %>
				<% if (!_.isEmpty(properties.content)) { %>
					<div class="entry-main">
						<%= templates.showContent({ properties: properties, long: true }) %>
					</div>
				<% } %>
				<% if (!isUntitled) { %>
					</fragmention-target>
				<% } %>
			</div>
		<% } %>

		<footer class="entry-footer">

			<div class="entry-actions">
				<%= templates.entryActions({ entry: entry, permalink: data.permalink }) %>
			</div>

			<% if (!_.isEmpty(properties.syndication)) { %>
				<div class="entry-syndication">
					<h2>Elsewhere</h2>
					<ul>
						<% _.forEach(properties.syndication, function (repost) { %>
							<li><a class="u-syndication" rel="syndication" href="${ repost }"><%- syndicationName(repost) %></a></li>
						<% }) %>
					</ul>
				</div>
			<% } %>

		<% if (!_.isEmpty(properties.comment)) { %>
			<section class="entry-responses">
				<%= templates.entryComments({ entry: entry }) %>
			</section>
		<% } %>

	</article>
</main>
<%= templates.footer(scope) %>
